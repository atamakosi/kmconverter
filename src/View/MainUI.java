/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Converter;
import Model.Parser;
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author mcnabba
 */
public class MainUI extends javax.swing.JFrame {

    private File f = null;
    private final Parser p = new Parser();
    private JTable table = null;
    
    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        this.setTitle("Kamar-Moodle Converter");
    }
    
    public void openFile()  {
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV file", new String[] {"csv"});
        fc.setFileFilter(filter);
        int action = fc.showOpenDialog(openMenu);
        try {
            this.f = fc.getSelectedFile();
            FileInputStream fis = new FileInputStream(this.f);
            this.p.clear();
            workPnl.removeAll();
        }   catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        this.p.read(this.f);
        displayFile();
    }
    
    public void displayFile()   {
        if ( p.getData() != null )
        {
            this.table = new JTable(new CSVTableModel());
            JScrollPane js = new JScrollPane(table);
            table.setFillsViewportHeight(true);
            workPnl.add(js, BorderLayout.CENTER);
        }
        pack();
    }

   private class CSVTableModel extends AbstractTableModel{

       private ArrayList<String[]> list;
       private String[] columns;

       public CSVTableModel() {
           this.list = p.getData();
           this.columns = p.getHeaders();
       }

       @Override
       public String getColumnName(int col)   {
           return columns[col];
       }

       @Override
       public int getRowCount() {
           return list.size();
       }

       @Override
       public int getColumnCount() {
           return columns.length;
       }

       @Override
       public Object getValueAt(int row, int col) {
           if ( col < list.get(row).length )   {
                return list.get(row)[col];
           }    else    {
               return "";
           }
       }

       @Override
       public void setValueAt(Object value, int row, int col)  {
           list.get(row)[col] = (String) value;
           this.fireTableCellUpdated(row, col);
       }
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPnl = new javax.swing.JPanel();
        workPnl = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        openBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        convertBtn = new javax.swing.JButton();
        settingsBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        convertMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        settingsMenuItem = new javax.swing.JMenu();
        editMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 1200));
        setPreferredSize(new java.awt.Dimension(800, 800));

        mainPnl.setMaximumSize(new java.awt.Dimension(900, 900));
        mainPnl.setPreferredSize(new java.awt.Dimension(900, 900));

        workPnl.setLayout(new java.awt.BorderLayout());

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        openBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/open-file-icon.png"))); // NOI18N
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });
        toolBar.add(openBtn);

        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save-icon.png"))); // NOI18N
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        toolBar.add(saveBtn);

        clearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/application-delete-icon.png"))); // NOI18N
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        toolBar.add(clearBtn);

        convertBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Run-icon.png"))); // NOI18N
        convertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertBtnActionPerformed(evt);
            }
        });
        toolBar.add(convertBtn);

        settingsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Start-Menu-Run-icon.png"))); // NOI18N
        settingsBtn.setFocusable(false);
        settingsBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settingsBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        settingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsBtnActionPerformed(evt);
            }
        });
        toolBar.add(settingsBtn);

        javax.swing.GroupLayout mainPnlLayout = new javax.swing.GroupLayout(mainPnl);
        mainPnl.setLayout(mainPnlLayout);
        mainPnlLayout.setHorizontalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addGroup(mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(workPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPnlLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPnlLayout.setVerticalGroup(
            mainPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPnlLayout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(mainPnl, java.awt.BorderLayout.CENTER);

        fileMenuItem.setText("File");

        openMenu.setText("Open..");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        fileMenuItem.add(openMenu);

        convertMenu.setText("Convert");
        fileMenuItem.add(convertMenu);

        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenuItem.add(exitMenu);

        menuBar.add(fileMenuItem);

        settingsMenuItem.setText("Settings");

        editMenuItem.setText("Edit");
        settingsMenuItem.add(editMenuItem);

        menuBar.add(settingsMenuItem);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        openFile();
    }//GEN-LAST:event_openMenuActionPerformed

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        openFile();
    }//GEN-LAST:event_openBtnActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        dispose();
    }//GEN-LAST:event_exitMenuActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            p.getPrefs().writePreferences();
        } catch (URISyntaxException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void convertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertBtnActionPerformed
        Converter c = new Converter();
        
    }//GEN-LAST:event_convertBtnActionPerformed

    private void settingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsBtnActionPerformed
        WizardUI w = new WizardUI(p);
        w.setVisible(true);
    }//GEN-LAST:event_settingsBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        this.p.clear();
        workPnl.removeAll();
        repaint();
    }//GEN-LAST:event_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton convertBtn;
    private javax.swing.JMenuItem convertMenu;
    private javax.swing.JMenuItem editMenuItem;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton openBtn;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JMenu settingsMenuItem;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JPanel workPnl;
    // End of variables declaration//GEN-END:variables
}
